openapi: 3.0.0
info:
  version: '1.0'
  title: "MoneyGenius OpenAPI 3.0"
  description: API for managing personal finance and sharing common expenses.
  license:
    name: MIT
servers:
  - url: http://localhost:8000/api/v1
    description: Development server
paths:
  /authentications/{login}:
    post:
      summary: Login to an existing user
      description: Use the input parameters to authenticate an existing user.   
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "marco@unitn.it"
                password:
                  type: string
                  example: "123"
      responses:
        '200':
          description: The logged user
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    description: Registration mail of the user
                    example: marco@unit.it
                  name:
                    type: string
                    description: Registration name of the user
                    example: marco
                  id: 
                    type: string
                    description: Id associated with the user
                    example: marco's_id
                  success:
                    type: boolean
                    description: Result of the authentication process
                    example: true
                  token:
                    type: string
                    description: User's authentication token
                  message:
                    type: string
                    description: A message for the user
                    example: Enjoy your token! 
                  self: 
                    type: string
                    description: Reference to the logged user
                    example: api/v1/marco's_id
        '400':
          description: Invalid parameters 
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Result of the authentication process
                    example: false
                  message:
                    type: string
                    description: Error message
                    example: Autenticazione failed, invalid email or password